(defcfg
  concurrent-tap-hold yes
  delegate-to-first-layer yes
  linux-dev-names-include (
    "Asus Keyboard",
    "Telink Wireless Gaming Keyboard"
  )
)

(deflocalkeys-linux
  kbd 202
  han 122
)

(defvar
  tap-timeout   40
  hold-timeout  150
  fast-timeout 65
  tt $tap-timeout
  ht $hold-timeout
  ft $fast-timeout
)

(defvirtualkeys
  vsft lsft
  vnum (layer-while-held num)
)

(defalias 

  dkb (layer-switch disabled)
  def (layer-switch base)
  code (layer-switch code)

  num (layer-while-held num)
  nav (layer-while-held nav)

  han (tap-hold-press $tt $ht han @num)
  cap (tap-hold-press $tt $ht esc lctl)
  spc (tap-hold-release 280 $ht spc @nav)

  a (tap-hold-release-keys 280 $ht a lmet (q w e r t g z x c v b))
  s (tap-hold-release-keys 280 $ht s lalt (q w e r t g z x c v b))
  d (tap-hold-release-keys 280 $ht d lsft (q w e r t g z x c v b))
  f (tap-hold-release-keys 280 $ht f lctl (q w e r t g z x c v b))

  j (tap-hold-release-keys 280 $ht j lctl (y u i o p [ ] h ' n m , . /))
  k (tap-hold-release-keys 280 $ht k rsft (y u i o p [ ] h ' n m , . /))
  l (tap-hold-release-keys 280 $ht l lalt (y u i o p [ ] h ' n m , . /))
  ' (tap-hold-release-keys 280 $ht ' lmet (y u i o p [ ] h ' n m , . /))

  lt (multi lsft ,)
  gt (multi lsft .)
  lp (multi lsft 9)
  rp (multi lsft 0)

  qt (multi lsft /)
  ex (multi lsft 1)


  fr/ (fork @qt @ex (lsft rsft))

  scln (unshift ;)

  fr, (fork , @scln (lsft rsft))
  fr. (fork . (multi lsft scln) (lsft rsft))

  frlp (fork @lp @lt (lsft rsft))

  frrp (fork @rp @gt (lsft rsft))


  = (unshift =)

  cw (caps-word-custom
    2000
    (a b c d e f g h i j k l m n o p q r s t u v w x y z)
    (bspc del)
  )

  osft (one-shot 800 lsft)

  sft (tap-dance $ht (@osft @cw))

  pnm (on-press press-virtualkey vnum)
  rnm (on-press release-virtualkey vnum)

  psf (on-press press-virtualkey vsft)
  rsf (on-press release-virtualkey vsft)

  tnum (multi 
    (on-press press-virtualkey vnum)
    (on-release release-virtualkey vnum)
  )

  tsym (multi
    (on-press press-virtualkey vsft)
    (on-release release-virtualkey vnum)
    (on-release release-virtualkey vsft)
  )

  psym (multi 
    (on-press press-virtualkey vnum)
    (on-press press-virtualkey vsft)
  )

  rsym (multi 
    (on-press release-virtualkey vnum)
    (on-press release-virtualkey vsft)
  )

  hnm (tap-hold-press $tt $ht @pnm @num)
  nnm (tap-hold-press $tt $ht @psf @tsym)

  snm (fork @nnm @rsym (lsft rsft))

  bck (multi _ (layer-switch code))

  rsn (multi _ @rsym)
  ;; nav arrows

  nvl (tap-hold-release-timeout 280 $ht left lctl home)
  nvd (tap-hold-release-timeout 280 $ht down lsft (multi lctl end))
  nvu (tap-hold-release-timeout 280 $ht up lalt (multi lctl home))
  nvr (tap-hold-release-timeout 280 $ht right lmet (multi end))
)

;; combos
(defalias
  copy (multi lctl ins) 
  paste (multi lsft ins)
  cut (multi lctl x)
  ;; rmh 
  clp (tap-hold $tt $ht @frlp (multi lctl lsft))
  crp (tap-hold $tt $ht @frrp (multi lsft lalt))
  cl; (tap-hold $tt $ht @sft  (multi rmet lalt))

  ;; rbh 
  cm, (tap-hold $tt $ht [ [)
  c,. (tap-hold $tt $ht ] ])

  ;; lth 
  cwe (tap-hold $tt $ht (multi @rsym esc) (multi @rsym esc))
  cer (tap-hold $tt $ht (multi @rsym ret) (multi @rsym ret))

  ;; lmh 
  csd (tap-hold $tt $ht tab   (multi lalt lsft))
  cdf (tap-hold $tt $ht han   (multi lsft lctl))
  cas (tap-hold $tt $ht @sft  (multi lmet lalt))

  ;; lbh 
  cxc (tap-hold $tt $ht @copy @copy)
  ccv (tap-hold $tt $ht @paste @paste) 
  cxv (tap-hold $tt $ht @cut @cut)

  ;; lth 
  cui (tap-hold $tt $ht bspc bspc)
  cio (tap-hold $tt $ht del del)

  ;; rtv
  cyh (tap-hold $tt $ht (multi lsft 6) (multi lsft 6))
  cuj (tap-hold $tt $ht (multi lsft =) (multi lsft =))
  cik (tap-hold $tt $ht (multi lsft 8) (multi lsft 8))
  col (tap-hold $tt $ht (multi lsft 7) (multi lsft 7))

  ;; rbv
  chn (tap-hold $tt $ht (multi lsft -) (multi lsft -))
  cjm (tap-hold $tt $ht (unshift -) (unshift -))
  ck, (tap-hold $tt $ht (unshift /) (unshift /))
  cl. (tap-hold $tt $ht (multi lsft \) (multi lsft \))

  ;;ltv
  cws (tap-hold $tt $ht (multi lsft 2) (multi lsft 2))
  ced (tap-hold $tt $ht (multi lsft 3) (multi lsft 3))
  crf (tap-hold $tt $ht (multi lsft 4) (multi lsft 4))
  ctg (tap-hold $tt $ht (multi lsft 5) (multi lsft 5))

  ;; lbv
  csx (tap-hold $tt $ht (unshift `) (unshift `))
  cdc (tap-hold $tt $ht (unshift \) (unshift \))
  cfv (tap-hold $tt $ht (unshift =) (unshift =))
  cgb (tap-hold $tt $ht (multi lsft `) (multi lsft `))
)

(defchordsv2
  ;; rmh 
  (j k)  @clp         25 first-release (base nav)
  (k l)  @crp         25 first-release (base nav)
  (l ;)  @cl;         25 first-release (base)

  ;; rbh 
  (m ,)  @cm,         25 first-release (base)
  (, .)  @c,.         25 first-release (base)

  ;; lth 
  (w e)  @cwe         25 first-release (base)
  (e r)  @cer         25 first-release (base)

  ;; lmh 
  (a s)  @cas         25 first-release (base)
  (s d)  @csd         25 first-release (base)
  (d f)  @cdf         25 first-release (base)

  ;; lbh 
  (x c) @cxc          25 first-release (base)
  (c v) @ccv          25 first-release (base)
  (x v) @cxv          25 first-release (base)

  ;; lth 
  (u i) @cui          25 first-release (base)
  (i o) @cio          25 first-release (base)

  ;; rtv
  (y h) @cyh  35 first-release (base)
  (u j) @cuj  35 first-release (base)
  (i k) @cik  35 first-release (base)
  (o l) @col  35 first-release (base)

  ;; rbv
  (h n) @chn 35 first-release (base)
  (j m) @cjm 35 first-release (base)
  (k ,) @ck, 35 first-release (base)
  (l .) @cl. 35 first-release (base)

  ;;ltv
  (w s) @cws 35 first-release (base)
  (e d) @ced 35 first-release (base)
  (r f) @crf 35 first-release (base)
  (t g) @ctg 35 first-release (base)

  ;; lbv
  (s x) @csx  35 first-release (base)
  (d c) @cdc  35 first-release (base)
  (f v) @cfv  35 first-release (base)
  (g b) @cgb  35 first-release (base)
)

(defsrc
  kbd
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl
)

(deflayer code
  @dkb
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    bspc del  \
  @cap @a   @s   @d   @f   g    h    @j   @k   @l   @'   han  ret
  @sft z    x    c    v    b    n    m    @fr, @fr. @fr/ @sft
  lctl lmet @sft           @spc           @hnm lctl
)

(deflayer nav
  _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    pgdn pgup _    _    _    _    _    
  _    _    _    _    _    _    @nvl @nvd @nvu @nvr han  _    _    
  _    _    _    _    _    _    ins  @sft S-,  S-.  @ex  _    
  _    _    _              _              _    _
)

(deflayer num
  _ 
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  @rsn @rsn 7    8    9    @rsn @rsn @rsn @rsn @rsn @rsn @rsn @rsn _        
  @rsn 0    4    5    6    @rsn @rsn @rsn @rsn @rsn @rsn @rsn @rsn     
  @rsn @rsn 1    2    3    @rsn @rsn @rsn _    _    _    @rsn     
  @rsn _    @rsn           _              @snm _
)

(deflayer base
  @code
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12  del
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            han  rctl
)

(deflayer disabled
  @def
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  XX   XX   XX             XX             XX   XX
)
